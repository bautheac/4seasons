bind_rows()
}) %>%
bind_rows()
nrow(combinations)
temp <-  lapply(271620L:nrow(combinations), function(j){
x <- str_split(combinations$subperiods[j], pattern = ' - ', simplify = TRUE)
message(x)
y <- x[2L]; x <- x[1L]
lapply(c(x, y), function(k){
as.tibble(cor(data[k]), rownames = 'ticker') %>% mutate(periods = combinations$periods[j],
subperiods = combinations$subperiods[j],
subperiod = k) %>%
select(periods, subperiods, subperiod, everything())
}) %>%
bind_rows()
}) %>%
bind_rows()
View(temp)
temp <-  lapply(distinct(futures, field) %>% flatten_chr(), function(i){
data <- filter(futures, field == i) %>% select(-c(`period id`, field))
data <- xts(select(data, -date), order.by = data$date)
lapply(271620L:nrow(combinations), function(j){
x <- str_split(combinations$subperiods[j], pattern = ' - ', simplify = TRUE)
y <- x[2L]; x <- x[1L]
lapply(c(x, y), function(k){
as.tibble(cor(data[k]), rownames = 'ticker') %>%
mutate(variable = i, periods = combinations$periods[j], subperiods = combinations$subperiods[j], subperiod = k) %>%
select(variable, periods, subperiods, subperiod, everything())
}) %>%
bind_rows()
}) %>%
bind_rows()
}) %>%
bind_rows()
View(temp)
library(tidyverse); library(xts); library(purrr)
periods <- tibble(id = 1L:4L,
start = c("1997-07-01", "2004-01-01", "2008-01-01", "2014-01-01") %>% as.Date(),
end = c("2003-12-31", "2007-12-31", "2013-12-31", "2018-05-31") %>% as.Date(),
name = c("past", "financialization", "crisis", "present"))
tickers <- read_csv("data/tickers.csv") %>%
filter(`asset class` == "commodity", country == "US") %>%
select(ticker = `active contract ticker`, sector, subsector, exchange, name)
futures <- read_rds("data/Futures.Rds") %>%
semi_join(tickers %>% select(Active_ticker = ticker)) %>%
filter(Date >= (periods %>% filter(id == 1L))$start,
Date <= (periods %>% filter(id == 4L))$end) %>%
mutate(Period_id = sapply(Date, function(x) (periods %>% filter(x >= start, x <= end))$id)) %>%
select(ticker = Active_ticker, `period id` = Period_id, date = Date, `return` = Front_return,
`OI growth` = OI_growth, `roll yield` = Roll_yield, CHP) %>%
gather(field, value, -c(ticker, `period id`, date)) %>%
spread(ticker, value) %>%
select(`period id`, field, date, everything()) %>%
arrange(`period id`, field, date)
library(xlsx)
futures
write.xlsx(futures, file = '../results/correlations.xlsx', sheetName = "futures", col.names = TRUE, row.names = FALSE, append = TRUE)
write.xlsx2(futures, file = '../results/correlations.xls', sheetName = "futures", col.names = TRUE, row.names = FALSE, append = TRUE)
write.xlsx2(futures, file = 'results/correlations.xls', sheetName = "futures", col.names = TRUE, row.names = FALSE, append = TRUE)
write.xlsx2(futures, file = 'results/correlations.xlsx', sheetName = "futures", col.names = TRUE, row.names = FALSE, append = TRUE)
write.xlsx2(futures, file = 'results/correlations.xlsx', sheetName = "futures", col.names = TRUE, row.names = FALSE, append = TRUE)
write.xlsx2(futures, file = 'results/correlations.xlsx', sheetName = "futures", col.names = TRUE, row.names = FALSE, append = TRUE)
as.data.frame(futures)
write.xlsx2(as.data.frame(futures), file = 'results/correlations.xlsx', sheetName = "futures", col.names = TRUE, row.names = FALSE, append = TRUE)
write.xlsx2(as.data.frame(periods), file = 'results/correlations.xlsx', sheetName = "periods", col.names = TRUE, row.names = FALSE, append = TRUE)
?message
gc()
library(tidyverse); library(xts); library(purrr)
periods <- tibble(id = 1L:4L,
start = c("1997-07-01", "2004-01-01", "2008-01-01", "2014-01-01") %>% as.Date(),
end = c("2003-12-31", "2007-12-31", "2013-12-31", "2018-05-31") %>% as.Date(),
name = c("past", "financialization", "crisis", "present"))
tickers <- read_csv("data/tickers.csv") %>%
filter(`asset class` == "commodity", country == "US") %>%
select(ticker = `active contract ticker`, sector, subsector, exchange, name)
futures <- read_rds("data/Futures.Rds") %>%
semi_join(tickers %>% select(Active_ticker = ticker)) %>%
filter(Date >= (periods %>% filter(id == 1L))$start,
Date <= (periods %>% filter(id == 4L))$end) %>%
mutate(Period_id = sapply(Date, function(x) (periods %>% filter(x >= start, x <= end))$id)) %>%
select(ticker = Active_ticker, `period id` = Period_id, date = Date, `return` = Front_return,
`OI growth` = OI_growth, `roll yield` = Roll_yield, CHP) %>%
gather(field, value, -c(ticker, `period id`, date)) %>%
spread(ticker, value) %>%
select(`period id`, field, date, everything()) %>%
arrange(`period id`, field, date)
periods <- distinct(futures, period = `period id`, date)
periods <- lapply(distinct(periods, period) %>% flatten_int, function(j){
tibble(period = j, subperiod = sapply(53L:nrow(filter(periods, period == j)), function(i) {
paste(filter(periods, period == j)$date[i - 52L], filter(periods, period == j)$date[i], sep = '/')
}))
}) %>%
bind_rows()
combinations <- combn(distinct(periods, period) %>% flatten_int(), 2L)
combinations <- lapply(1L:ncol(combinations), function(i){
x <- paste('period', combinations[1L, i])
y <- paste('period', combinations[2L, i])
compare <- paste(x, y, sep = ' - ')
expand.grid(filter(periods, period == combinations[1L, i])$subperiod,
filter(periods, period == combinations[2L, i])$subperiod) %>%
mutate(periods = compare, subperiods = paste(Var1, Var2, sep = ' - ')) %>%
select(periods, subperiods)
}) %>%
bind_rows()
for(i in distinct(futures, field) %>% flatten_chr()){
data <- filter(futures, field == i) %>% select(-c(`period id`, field))
data <- xts(select(data, -date), order.by = data$date)
data <- lapply(1L:nrow(combinations), function(j){
message(paste(i, combinations$periods[j], combinations$subperiods[j], sep = ' - '))
x <- str_split(combinations$subperiods[j], pattern = ' - ', simplify = TRUE)
y <- x[2L]; x <- x[1L]
lapply(c(x, y), function(k){
as.tibble(cor(data[k]), rownames = 'ticker') %>%
mutate(variable = i, periods = combinations$periods[j], subperiods = combinations$subperiods[j], subperiod = k) %>%
select(variable, periods, subperiods, subperiod, everything())
}) %>%
bind_rows()
gc()
}) %>%
bind_rows()
write.xlsx2(as.data.frame(data), file = 'results/correlations.xlsx', sheetName = i, col.names = TRUE, row.names = FALSE, append = TRUE)
gc()
}
gc()
for(i in distinct(futures, field) %>% flatten_chr()){
data <- filter(futures, field == i) %>% select(-c(`period id`, field))
data <- xts(select(data, -date), order.by = data$date)
data <- lapply(1L:nrow(combinations), function(j){
message(paste(i, combinations$periods[j], combinations$subperiods[j], sep = ' - '))
x <- str_split(combinations$subperiods[j], pattern = ' - ', simplify = TRUE)
y <- x[2L]; x <- x[1L]
correlations <- lapply(c(x, y), function(k){
as.tibble(cor(data[k]), rownames = 'ticker') %>%
mutate(variable = i, periods = combinations$periods[j], subperiods = combinations$subperiods[j], subperiod = k) %>%
select(variable, periods, subperiods, subperiod, everything())
}) %>%
bind_rows()
gc(); correlations
}) %>%
bind_rows()
write.xlsx2(as.data.frame(data), file = 'results/correlations.xlsx', sheetName = i, col.names = TRUE, row.names = FALSE, append = TRUE)
gc()
}
gc()
for(i in distinct(futures, field) %>% flatten_chr()){
data <- filter(futures, field == i) %>% select(-c(`period id`, field))
data <- xts(select(data, -date), order.by = data$date)
data <- lapply(1L:nrow(combinations), function(j){
message(paste(i, combinations$periods[j], combinations$subperiods[j], sep = ' - '))
x <- str_split(combinations$subperiods[j], pattern = ' - ', simplify = TRUE)
y <- x[2L]; x <- x[1L]
correlations <- lapply(c(x, y), function(k){
as.tibble(cor(data[k]), rownames = 'ticker') %>%
mutate(variable = i, periods = combinations$periods[j], subperiods = combinations$subperiods[j], subperiod = k) %>%
select(variable, periods, subperiods, subperiod, everything())
}) %>%
bind_rows()
correlations
}) %>%
bind_rows()
write.xlsx2(as.data.frame(data), file = 'results/correlations.xlsx', sheetName = i, col.names = TRUE, row.names = FALSE, append = TRUE)
gc()
}
install.packages('doSNOW')
install.packages('foreach')
library(doSNOW); library(foreach)
cluster <- makeCluster(8L); registerDoSNOW(cluster)
foreach(i = distinct(futures, field) %>% flatten_chr()) %dopar% {
data <- filter(futures, field == i) %>% select(-c(`period id`, field))
data <- xts(select(data, -date), order.by = data$date)
data <- lapply(1L:nrow(combinations), function(j){
message(paste(i, combinations$periods[j], combinations$subperiods[j], sep = ' - '))
x <- str_split(combinations$subperiods[j], pattern = ' - ', simplify = TRUE)
y <- x[2L]; x <- x[1L]
correlations <- lapply(c(x, y), function(k){
as.tibble(cor(data[k]), rownames = 'ticker') %>%
mutate(variable = i, periods = combinations$periods[j], subperiods = combinations$subperiods[j], subperiod = k) %>%
select(variable, periods, subperiods, subperiod, everything())
}) %>%
bind_rows()
correlations
}) %>%
bind_rows()
write.xlsx2(as.data.frame(data), file = paste0('results/', i, '.xlsx'), sheetName = 'correlations', col.names = TRUE, row.names = FALSE, append = FALSE)
gc()
}
foreach(i = distinct(futures, field) %>% flatten_chr()) %dopar% {
library(tidyverse); library(xts); library(purrr)
data <- filter(futures, field == i) %>% select(-c(`period id`, field))
data <- xts(select(data, -date), order.by = data$date)
data <- lapply(1L:nrow(combinations), function(j){
message(paste(i, combinations$periods[j], combinations$subperiods[j], sep = ' - '))
x <- str_split(combinations$subperiods[j], pattern = ' - ', simplify = TRUE)
y <- x[2L]; x <- x[1L]
correlations <- lapply(c(x, y), function(k){
as.tibble(cor(data[k]), rownames = 'ticker') %>%
mutate(variable = i, periods = combinations$periods[j], subperiods = combinations$subperiods[j], subperiod = k) %>%
select(variable, periods, subperiods, subperiod, everything())
}) %>%
bind_rows()
correlations
}) %>%
bind_rows()
write.xlsx2(as.data.frame(data), file = paste0('results/', i, '.xlsx'), sheetName = 'correlations', col.names = TRUE, row.names = FALSE, append = FALSE)
gc()
}
stopCluster(cluster)
library(tidyverse); library(purrr); library(doSNOW); library(foreach)
periods <- tibble(id = 1L:4L,
start = c("1997-07-01", "2004-01-01", "2008-01-01", "2014-01-01") %>% as.Date(),
end = c("2003-12-31", "2007-12-31", "2013-12-31", "2018-05-31") %>% as.Date(),
name = c("past", "financialization", "crisis", "present"))
tickers <- read_csv("data/tickers.csv") %>%
filter(`asset class` == "commodity", country == "US") %>%
select(ticker = `active contract ticker`, sector, subsector, exchange, name)
futures <- read_rds("data/Futures.Rds") %>%
semi_join(tickers %>% select(Active_ticker = ticker)) %>%
filter(Date >= (periods %>% filter(id == 1L))$start,
Date <= (periods %>% filter(id == 4L))$end) %>%
mutate(Period_id = sapply(Date, function(x) (periods %>% filter(x >= start, x <= end))$id)) %>%
select(ticker = Active_ticker, `period id` = Period_id, date = Date, `return` = Front_return,
`OI growth` = OI_growth, `roll yield` = Roll_yield, CHP) %>%
gather(field, value, -c(ticker, `period id`, date)) %>%
spread(ticker, value) %>%
select(`period id`, field, date, everything()) %>%
arrange(`period id`, field, date)
periods <- distinct(futures, period = `period id`, date)
periods <- lapply(distinct(periods, period) %>% flatten_int, function(j){
tibble(period = j, subperiod = sapply(53L:nrow(filter(periods, period == j)), function(i) {
paste(filter(periods, period == j)$date[i - 52L], filter(periods, period == j)$date[i], sep = '/')
}))
}) %>%
bind_rows()
combinations <- combn(distinct(periods, period) %>% flatten_int(), 2L)
combinations <- lapply(1L:ncol(combinations), function(i){
x <- paste('period', combinations[1L, i])
y <- paste('period', combinations[2L, i])
compare <- paste(x, y, sep = ' - ')
expand.grid(filter(periods, period == combinations[1L, i])$subperiod,
filter(periods, period == combinations[2L, i])$subperiod) %>%
mutate(periods = compare, subperiods = paste(Var1, Var2, sep = ' - ')) %>%
select(periods, subperiods)
}) %>%
bind_rows()
cluster <- makeCluster(8L); registerDoSNOW(cluster)
foreach(i = distinct(futures, field) %>% flatten_chr()) %dopar% {
library(tidyverse); library(xts); library(purrr)
data <- filter(futures, field == i) %>% select(-c(`period id`, field))
data <- xts(select(data, -date), order.by = data$date)
data <- lapply(1L:nrow(combinations), function(j){
message(paste(i, combinations$periods[j], combinations$subperiods[j], sep = ' - '))
x <- str_split(combinations$subperiods[j], pattern = ' - ', simplify = TRUE)
y <- x[2L]; x <- x[1L]
correlations <- lapply(c(x, y), function(k){
as.tibble(cor(data[k]), rownames = 'ticker') %>%
mutate(variable = i, periods = combinations$periods[j], subperiods = combinations$subperiods[j], subperiod = k) %>%
select(variable, periods, subperiods, subperiod, everything())
}) %>%
bind_rows()
correlations
}) %>%
bind_rows()
write.xlsx2(as.data.frame(data), file = paste0('results/', i, '.xlsx'), sheetName = 'correlations', col.names = TRUE, row.names = FALSE, append = FALSE)
gc()
}
library(tidyverse); library(purrr); library(doSNOW); library(foreach)
periods <- tibble(id = 1L:4L,
start = c("1997-07-01", "2004-01-01", "2008-01-01", "2014-01-01") %>% as.Date(),
end = c("2003-12-31", "2007-12-31", "2013-12-31", "2018-05-31") %>% as.Date(),
name = c("past", "financialization", "crisis", "present"))
tickers <- read_csv("data/tickers.csv") %>%
filter(`asset class` == "commodity", country == "US") %>%
select(ticker = `active contract ticker`, sector, subsector, exchange, name)
futures <- read_rds("data/Futures.Rds") %>%
semi_join(tickers %>% select(Active_ticker = ticker)) %>%
filter(Date >= (periods %>% filter(id == 1L))$start,
Date <= (periods %>% filter(id == 4L))$end) %>%
mutate(Period_id = sapply(Date, function(x) (periods %>% filter(x >= start, x <= end))$id)) %>%
select(ticker = Active_ticker, `period id` = Period_id, date = Date, `return` = Front_return,
`OI growth` = OI_growth, `roll yield` = Roll_yield, CHP) %>%
gather(field, value, -c(ticker, `period id`, date)) %>%
spread(ticker, value) %>%
select(`period id`, field, date, everything()) %>%
arrange(`period id`, field, date)
periods <- distinct(futures, period = `period id`, date)
periods <- lapply(distinct(periods, period) %>% flatten_int, function(j){
tibble(period = j, subperiod = sapply(53L:nrow(filter(periods, period == j)), function(i) {
paste(filter(periods, period == j)$date[i - 52L], filter(periods, period == j)$date[i], sep = '/')
}))
}) %>%
bind_rows()
combinations <- combn(distinct(periods, period) %>% flatten_int(), 2L)
combinations <- lapply(1L:ncol(combinations), function(i){
x <- paste('period', combinations[1L, i])
y <- paste('period', combinations[2L, i])
compare <- paste(x, y, sep = ' - ')
expand.grid(filter(periods, period == combinations[1L, i])$subperiod,
filter(periods, period == combinations[2L, i])$subperiod) %>%
mutate(periods = compare, subperiods = paste(Var1, Var2, sep = ' - ')) %>%
select(periods, subperiods)
}) %>%
bind_rows()
cluster <- makeCluster(8L); registerDoSNOW(cluster)
foreach(i = distinct(futures, field) %>% flatten_chr()) %dopar% {
library(tidyverse); library(xts); library(purrr)
data <- filter(futures, field == i) %>% select(-c(`period id`, field))
data <- xts(select(data, -date), order.by = data$date)
data <- lapply(1L:nrow(combinations), function(j){
message(paste(i, combinations$periods[j], combinations$subperiods[j], sep = ' - '))
x <- str_split(combinations$subperiods[j], pattern = ' - ', simplify = TRUE)
y <- x[2L]; x <- x[1L]
correlations <- lapply(c(x, y), function(k){
as.tibble(cor(data[k]), rownames = 'ticker') %>%
mutate(variable = i, periods = combinations$periods[j], subperiods = combinations$subperiods[j], subperiod = k) %>%
select(variable, periods, subperiods, subperiod, everything())
}) %>%
bind_rows()
correlations
}) %>%
bind_rows()
write.xlsx2(as.data.frame(data), file = paste0('results/', i, '.xlsx'), sheetName = 'correlations', col.names = TRUE, row.names = FALSE, append = FALSE)
gc()
}
library(tidyverse); library(purrr); library(doSNOW); library(foreach)
periods <- tibble(id = 1L:4L, start = c("1997-07-01", "2004-01-01", "2008-01-01", "2014-01-01") %>% as.Date(),
end = c("2003-12-31", "2007-12-31", "2013-12-31", "2018-05-31") %>% as.Date(),
name = c("past", "financialization", "crisis", "present"))
tickers <- read_csv("data/tickers.csv") %>% filter(`asset class` == "commodity", country == "US") %>%
select(ticker = `active contract ticker`, sector, subsector, exchange, name)
futures <- read_rds("data/Futures.Rds") %>%
semi_join(tickers %>% select(Active_ticker = ticker)) %>%
filter(Date >= (periods %>% filter(id == 1L))$start,
Date <= (periods %>% filter(id == 4L))$end) %>%
mutate(Period_id = sapply(Date, function(x) (periods %>% filter(x >= start, x <= end))$id)) %>%
select(ticker = Active_ticker, `period id` = Period_id, date = Date, `return` = Front_return,
`OI growth` = OI_growth, `roll yield` = Roll_yield, CHP) %>%
gather(field, value, -c(ticker, `period id`, date)) %>%
spread(ticker, value) %>%
select(`period id`, field, date, everything()) %>%
arrange(`period id`, field, date)
periods <- distinct(futures, period = `period id`, date)
periods <- lapply(distinct(periods, period) %>% flatten_int, function(j){
tibble(period = j, subperiod = sapply(53L:nrow(filter(periods, period == j)), function(i) {
paste(filter(periods, period == j)$date[i - 52L], filter(periods, period == j)$date[i], sep = '/')
}))
}) %>%
bind_rows()
combinations <- combn(distinct(periods, period) %>% flatten_int(), 2L)
combinations <- lapply(1L:ncol(combinations), function(i){
x <- paste('period', combinations[1L, i])
y <- paste('period', combinations[2L, i])
compare <- paste(x, y, sep = ' - ')
expand.grid(filter(periods, period == combinations[1L, i])$subperiod,
filter(periods, period == combinations[2L, i])$subperiod) %>%
mutate(periods = compare, subperiods = paste(Var1, Var2, sep = ' - ')) %>%
select(periods, subperiods)
}) %>%
bind_rows()
cluster <- makeCluster(8L); registerDoSNOW(cluster)
foreach(i = distinct(futures, field) %>% flatten_chr()) %dopar% {
library(tidyverse); library(xts); library(purrr); library(xlsx)
data <- filter(futures, field == i) %>% select(-c(`period id`, field))
data <- xts(select(data, -date), order.by = data$date)
data <- lapply(1L:nrow(combinations), function(j){
x <- str_split(combinations$subperiods[j], pattern = ' - ', simplify = TRUE); y <- x[2L]; x <- x[1L]
correlations <- lapply(c(x, y), function(k){
as.tibble(cor(data[k]), rownames = 'ticker') %>%
mutate(variable = i, periods = combinations$periods[j], subperiods = combinations$subperiods[j], subperiod = k) %>%
select(variable, periods, subperiods, subperiod, everything())
}) %>%
bind_rows()
correlations
}) %>%
bind_rows()
write.xlsx2(as.data.frame(data), file = paste0('results/', i, '.xlsx'), sheetName = 'correlations',
col.names = TRUE, row.names = FALSE, append = FALSE)
gc()
}
stopCluster(cluster)
gc()
library(tidyverse); library(purrr); library(doSNOW); library(foreach)
periods <- tibble(id = 1L:4L, start = c("1997-07-01", "2004-01-01", "2008-01-01", "2014-01-01") %>% as.Date(),
end = c("2003-12-31", "2007-12-31", "2013-12-31", "2018-05-31") %>% as.Date(),
name = c("past", "financialization", "crisis", "present"))
tickers <- read_csv("data/tickers.csv") %>% filter(`asset class` == "commodity", country == "US") %>%
select(ticker = `active contract ticker`, sector, subsector, exchange, name)
futures <- read_rds("data/Futures.Rds") %>%
semi_join(tickers %>% select(Active_ticker = ticker)) %>%
filter(Date >= (periods %>% filter(id == 1L))$start,
Date <= (periods %>% filter(id == 4L))$end) %>%
mutate(Period_id = sapply(Date, function(x) (periods %>% filter(x >= start, x <= end))$id)) %>%
select(ticker = Active_ticker, `period id` = Period_id, date = Date, `return` = Front_return,
`OI growth` = OI_growth, `roll yield` = Roll_yield, CHP) %>%
gather(field, value, -c(ticker, `period id`, date)) %>%
spread(ticker, value) %>%
select(`period id`, field, date, everything()) %>%
arrange(`period id`, field, date)
periods <- distinct(futures, period = `period id`, date)
periods <- lapply(distinct(periods, period) %>% flatten_int, function(j){
tibble(period = j, subperiod = sapply(53L:nrow(filter(periods, period == j)), function(i) {
paste(filter(periods, period == j)$date[i - 52L], filter(periods, period == j)$date[i], sep = '/')
}))
}) %>%
bind_rows()
combinations <- combn(distinct(periods, period) %>% flatten_int(), 2L)
combinations <- lapply(1L:ncol(combinations), function(i){
x <- paste('period', combinations[1L, i])
y <- paste('period', combinations[2L, i])
compare <- paste(x, y, sep = ' - ')
expand.grid(filter(periods, period == combinations[1L, i])$subperiod,
filter(periods, period == combinations[2L, i])$subperiod) %>%
mutate(periods = compare, subperiods = paste(Var1, Var2, sep = ' - ')) %>%
select(periods, subperiods)
}) %>%
bind_rows()
cluster <- makeCluster(8L); registerDoSNOW(cluster)
foreach(i = distinct(futures, field) %>% flatten_chr()) %dopar% {
library(tidyverse); library(xts); library(purrr); library(xlsx)
data <- filter(futures, field == i) %>% select(-c(`period id`, field))
data <- xts(select(data, -date), order.by = data$date)
data <- lapply(1L:nrow(combinations), function(j){
x <- str_split(combinations$subperiods[j], pattern = ' - ', simplify = TRUE); y <- x[2L]; x <- x[1L]
correlations <- lapply(c(x, y), function(k){
as.tibble(cor(data[k]), rownames = 'ticker') %>%
mutate(variable = i, periods = combinations$periods[j], subperiods = combinations$subperiods[j], subperiod = k) %>%
select(variable, periods, subperiods, subperiod, everything())
}) %>%
bind_rows()
correlations
}) %>%
bind_rows()
gc()
write.xlsx2(as.data.frame(data), file = paste0('results/', i, '.xlsx'), sheetName = 'correlations',
col.names = TRUE, row.names = FALSE, append = FALSE)
gc()
}
stopCluster(cluster)
?write_csv()
?tidyverse
??tidyverse
library(tidyverse); library(purrr); library(doSNOW); library(foreach)
periods <- tibble(id = 1L:4L, start = c("1997-07-01", "2004-01-01", "2008-01-01", "2014-01-01") %>% as.Date(),
end = c("2003-12-31", "2007-12-31", "2013-12-31", "2018-05-31") %>% as.Date(),
name = c("past", "financialization", "crisis", "present"))
tickers <- read_csv("data/tickers.csv") %>% filter(`asset class` == "commodity", country == "US") %>%
select(ticker = `active contract ticker`, sector, subsector, exchange, name)
futures <- read_rds("data/Futures.Rds") %>%
semi_join(tickers %>% select(Active_ticker = ticker)) %>%
filter(Date >= (periods %>% filter(id == 1L))$start,
Date <= (periods %>% filter(id == 4L))$end) %>%
mutate(Period_id = sapply(Date, function(x) (periods %>% filter(x >= start, x <= end))$id)) %>%
select(ticker = Active_ticker, `period id` = Period_id, date = Date, `return` = Front_return,
`OI growth` = OI_growth, `roll yield` = Roll_yield, CHP) %>%
gather(field, value, -c(ticker, `period id`, date)) %>%
spread(ticker, value) %>%
select(`period id`, field, date, everything()) %>%
arrange(`period id`, field, date)
periods <- distinct(futures, period = `period id`, date)
periods <- lapply(distinct(periods, period) %>% flatten_int, function(j){
tibble(period = j, subperiod = sapply(53L:nrow(filter(periods, period == j)), function(i) {
paste(filter(periods, period == j)$date[i - 52L], filter(periods, period == j)$date[i], sep = '/')
}))
}) %>%
bind_rows()
combinations <- combn(distinct(periods, period) %>% flatten_int(), 2L)
combinations <- lapply(1L:ncol(combinations), function(i){
x <- paste('period', combinations[1L, i])
y <- paste('period', combinations[2L, i])
compare <- paste(x, y, sep = ' - ')
expand.grid(filter(periods, period == combinations[1L, i])$subperiod,
filter(periods, period == combinations[2L, i])$subperiod) %>%
mutate(periods = compare, subperiods = paste(Var1, Var2, sep = ' - ')) %>%
select(periods, subperiods)
}) %>%
bind_rows()
cluster <- makeCluster(8L); registerDoSNOW(cluster)
foreach(i = distinct(futures, field) %>% flatten_chr()) %dopar% {
library(tidyverse); library(xts); library(purrr)
data <- filter(futures, field == i) %>% select(-c(`period id`, field))
data <- xts(select(data, -date), order.by = data$date)
data <- lapply(1L:nrow(combinations), function(j){
x <- str_split(combinations$subperiods[j], pattern = ' - ', simplify = TRUE); y <- x[2L]; x <- x[1L]
correlations <- lapply(c(x, y), function(k){
as.tibble(cor(data[k]), rownames = 'ticker') %>%
mutate(variable = i, periods = combinations$periods[j], subperiods = combinations$subperiods[j], subperiod = k) %>%
select(variable, periods, subperiods, subperiod, everything())
}) %>%
bind_rows()
correlations
}) %>%
bind_rows()
gc()
write_csv(as.data.frame(data), path = paste0('results/', i, '.csv'), append = FALSE, col_names = TRUE)
# write.xlsx2(as.data.frame(data), file = paste0('results/', i, '.xlsx'), sheetName = 'correlations',
#             col.names = TRUE, row.names = FALSE, append = FALSE)
gc()
}
stopCluster(cluster)
gc()
install.packages("RQuantLib")
install.packages("tidyquant")
install.packages("doSNOW")
knitr::opts_chunk$set(echo = TRUE)
correlations <- readr::read_csv2_chunked(file = "results/correlations/1-year chunks - CHP,csv")
correlations <- readr::read_csv_chunked(file = "results/correlations/1-year chunks - CHP,csv")
correlations <- readr::read_csv_chunked(file = "results/correlations/1-year chunks - CHP,csv")
correlations <- readr::read_csv_chunked(file = "results/correlations/1-year chunks - CHP.csv")
?readr::read_csv_chunked
?readr::read_csv
correlations <- readr::read_csv(file = "results/correlations/1-year chunks - CHP.csv", n_max = 50L)
correlations
View(correlations)
